// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ProgressBar with different sizes 1`] = `
<Component>
  <ThemeProvider
    theme={
      Object {
        "colors": Object {
          "black": "#262B34",
          "blackLight": "#5f656b",
          "blackberry": "#2e2d4c",
          "blackberryDark": "#24243C",
          "disabledGrey": "#ced4d9",
          "green": "#86AD20",
          "greenLight": "#e7f1d5",
          "grey": "#697782",
          "greyLight": "#f0f3f5",
          "greySoft": "#788590",
          "lines": "#dce3eb",
          "link": "#216db3",
          "linkDark": "#174a79",
          "overlay": "rgba(33,33,33,0.55)",
          "placeholders": "#e1e4e7",
          "placeholdersHover": "#d0d4d8",
          "primary": "#FF8C00",
          "primaryDark": "#C87600",
          "primaryLight": "#fef4e6",
          "primarySoft": "#ff9d26",
          "purple": "#AA5B9C",
          "purpleLight": "#EEDEEB",
          "red": "#f04540",
          "redDark": "#C43833",
          "redLight": "#FAE7E7",
          "redSoft": "#FF544F",
          "secondary": "#00A8Be",
          "secondaryGrey": "#e4eeff",
          "secondaryLight": "#D6EEF2",
          "secondaryOverlay": "rgba(2,168,189,0.10)",
          "secondarySoft": "#AADFE7",
          "shadow": "rgba(0, 0, 0, 0.25)",
          "tableHeader": "#f6f7f9",
          "tableHeaderHover": "#EBECEF",
          "tableHover": "#FAFBFC",
          "text": Object {
            "black": "#3c4248",
            "danger": "white",
            "default": "#697782",
            "green": "#86AD20",
            "greySoft": "#788590",
            "primary": "white",
            "red": "#f04540",
            "secondary": "#00A8Be",
            "white": "#FFFFFF",
            "yellow": "#E9B200",
          },
          "transparentBlack": "rgba(38, 43, 52, 0.8)",
          "white": "#FFFFFF",
          "yellow": "#E9B200",
          "yellowDark": "#BE9100",
          "yellowLight": "#FCF7E5",
        },
        "effects": Object {
          "boxShadow": "0 3px 9px 0 rgba(0, 0, 0, 0.25)",
          "buttonActive": Object {
            "boxShadow": "inset 0 -2px 4px 0 rgba(51, 51, 51, 0.23)",
          },
        },
        "typography": Object {
          "bigText": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "letterSpacing": 0.5,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": 11,
            "lineHeight": 1.5,
          },
          "defaultText": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": 13,
            "letterSpacing": 0.5,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
          "fontSizeBase": 13,
          "fontSizeSmall": 11,
          "largeText": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "letterSpacing": 0.5,
          },
          "letterSpacing": 0.5,
          "lineHeightBase": 1.5,
          "smallText": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica Neue\\", Helvetica, Arial, sans-serif",
            "fontSize": 11,
            "letterSpacing": 0.5,
          },
        },
        "utils": Object {
          "scrollbar": Object {
            "&::-webkit-scrollbar": Object {
              "height": 17,
              "width": 17,
            },
            "&::-webkit-scrollbar-thumb": Object {
              "background": "#e1e4e7",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
            "&::-webkit-scrollbar-thumb:window-inactive": Object {
              "background": "#e1e4e7",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
          },
        },
      }
    }
  >
    <JssProvider
      classNamePrefix="HoiPoi__"
      generateId={[Function]}
      jss={
        Jss {
          "generateId": [Function],
          "id": 3,
          "options": Object {
            "Renderer": [Function],
            "createGenerateId": [Function],
            "id": Object {
              "minify": false,
            },
            "plugins": Array [],
          },
          "plugins": PluginsRegistry {
            "plugins": Object {
              "external": Array [
                Object {
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                  "onUpdate": [Function],
                },
                Object {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                Object {
                  "onProcessRule": [Function],
                },
                Object {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                Object {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                Object {
                  "onProcessStyle": [Function],
                },
                Object {
                  "onProcessStyle": [Function],
                },
                Object {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                Object {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                Object {
                  "onProcessStyle": [Function],
                },
                Object {
                  "onChangeValue": [Function],
                  "onProcessRule": [Function],
                  "onProcessStyle": [Function],
                },
                Object {
                  "onProcessStyle": [Function],
                },
              ],
              "internal": Array [
                Object {
                  "onCreateRule": [Function],
                },
                Object {
                  "onCreateRule": [Function],
                },
                Object {
                  "onChangeValue": [Function],
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                },
                Object {
                  "onCreateRule": [Function],
                },
                Object {
                  "onCreateRule": [Function],
                },
                Object {
                  "onCreateRule": [Function],
                },
                Object {
                  "onCreateRule": [Function],
                },
              ],
            },
            "registry": Object {
              "onChangeValue": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onCreateRule": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessRule": Array [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessSheet": Array [],
              "onProcessStyle": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onUpdate": Array [
                [Function],
              ],
            },
          },
          "version": "10.3.0",
        }
      }
    >
      <ProgressBar
        percent={10}
        prefixCls="rc-progress"
        strokeLinecap="round"
        strokeWidth={0.555555555555556}
        type="line"
      >
        <Line
          className=""
          percent={10}
          prefixCls="rc-progress"
          strokeColor="#FF8C00"
          strokeLinecap="round"
          strokeWidth={0.555555555555556}
          style={Object {}}
          trailColor="#e1e4e7"
          trailWidth={1}
        >
          <svg
            className="rc-progress-line"
            preserveAspectRatio="none"
            style={Object {}}
            viewBox="0 0 100 0.555555555555556"
          >
            <path
              className="rc-progress-line-trail"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              stroke="#e1e4e7"
              strokeLinecap="round"
              strokeWidth={1}
            />
            <path
              className="rc-progress-line-path"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              key="0"
              stroke="#FF8C00"
              strokeLinecap="round"
              strokeWidth={0.555555555555556}
              style={
                Object {
                  "strokeDasharray": "10px, 100px",
                  "strokeDashoffset": "-0px",
                  "transition": "stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear",
                }
              }
            />
          </svg>
        </Line>
      </ProgressBar>
      <ProgressBar
        percent={20}
        prefixCls="rc-progress"
        strokeLinecap="round"
        strokeWidth={0.555555555555556}
        type="line"
      >
        <Line
          className=""
          percent={20}
          prefixCls="rc-progress"
          strokeColor="#FF8C00"
          strokeLinecap="round"
          strokeWidth={0.555555555555556}
          style={Object {}}
          trailColor="#e1e4e7"
          trailWidth={1}
        >
          <svg
            className="rc-progress-line"
            preserveAspectRatio="none"
            style={Object {}}
            viewBox="0 0 100 0.555555555555556"
          >
            <path
              className="rc-progress-line-trail"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              stroke="#e1e4e7"
              strokeLinecap="round"
              strokeWidth={1}
            />
            <path
              className="rc-progress-line-path"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              key="0"
              stroke="#FF8C00"
              strokeLinecap="round"
              strokeWidth={0.555555555555556}
              style={
                Object {
                  "strokeDasharray": "20px, 100px",
                  "strokeDashoffset": "-0px",
                  "transition": "stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear",
                }
              }
            />
          </svg>
        </Line>
      </ProgressBar>
      <ProgressBar
        percent={30}
        prefixCls="rc-progress"
        strokeLinecap="round"
        strokeWidth={0.555555555555556}
        type="line"
      >
        <Line
          className=""
          percent={30}
          prefixCls="rc-progress"
          strokeColor="#FF8C00"
          strokeLinecap="round"
          strokeWidth={0.555555555555556}
          style={Object {}}
          trailColor="#e1e4e7"
          trailWidth={1}
        >
          <svg
            className="rc-progress-line"
            preserveAspectRatio="none"
            style={Object {}}
            viewBox="0 0 100 0.555555555555556"
          >
            <path
              className="rc-progress-line-trail"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              stroke="#e1e4e7"
              strokeLinecap="round"
              strokeWidth={1}
            />
            <path
              className="rc-progress-line-path"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              key="0"
              stroke="#FF8C00"
              strokeLinecap="round"
              strokeWidth={0.555555555555556}
              style={
                Object {
                  "strokeDasharray": "30px, 100px",
                  "strokeDashoffset": "-0px",
                  "transition": "stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear",
                }
              }
            />
          </svg>
        </Line>
      </ProgressBar>
      <ProgressBar
        percent={50}
        prefixCls="rc-progress"
        strokeLinecap="round"
        strokeWidth={0.555555555555556}
        type="line"
      >
        <Line
          className=""
          percent={50}
          prefixCls="rc-progress"
          strokeColor="#FF8C00"
          strokeLinecap="round"
          strokeWidth={0.555555555555556}
          style={Object {}}
          trailColor="#e1e4e7"
          trailWidth={1}
        >
          <svg
            className="rc-progress-line"
            preserveAspectRatio="none"
            style={Object {}}
            viewBox="0 0 100 0.555555555555556"
          >
            <path
              className="rc-progress-line-trail"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              stroke="#e1e4e7"
              strokeLinecap="round"
              strokeWidth={1}
            />
            <path
              className="rc-progress-line-path"
              d="M 0.277777777777778,0.277777777777778
         L 99.72222222222223,0.277777777777778"
              fillOpacity="0"
              key="0"
              stroke="#FF8C00"
              strokeLinecap="round"
              strokeWidth={0.555555555555556}
              style={
                Object {
                  "strokeDasharray": "50px, 100px",
                  "strokeDashoffset": "-0px",
                  "transition": "stroke-dashoffset 0.3s ease 0s, stroke-dasharray .3s ease 0s, stroke 0.3s linear",
                }
              }
            />
          </svg>
        </Line>
      </ProgressBar>
    </JssProvider>
  </ThemeProvider>
</Component>
`;
