// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Input customizing props 1`] = `
<Component>
  <ThemeProvider
    theme={
      {
        "colors": {
          "aqua100": "#e4fafd",
          "aqua200": "#cbf3fc",
          "aqua300": "#AEE5F8",
          "aqua400": "#98d5f1",
          "aqua500": "#76bde8",
          "aqua600": "#5695c7",
          "aqua700": "#3b71a7",
          "aqua900": "#16386f",
          "black": "#3c4248",
          "blue100": "#d3e3fe",
          "blue200": "#a7c5fe",
          "blue300": "#7BA4FE",
          "blue400": "#5a89fd",
          "blue500": "#245dfd",
          "blue600": "#1a47d9",
          "blue700": "#1234b6",
          "blue900": "#061879",
          "green100": "#f4fad2",
          "green200": "#e7f6a6",
          "green300": "#A7E675",
          "green400": "#aecd50",
          "green500": "#86ad20",
          "green600": "#6e9417",
          "green700": "#237c10",
          "green900": "#345306",
          "neutral100": "#f9f9fa",
          "neutral150": "#f6f7f9",
          "neutral200": "#f4f5f6",
          "neutral300": "#e9ecee",
          "neutral400": "#dfe2e5",
          "neutral500": "#d4d8dc",
          "neutral600": "#a9b1b9",
          "neutral700": "#7d8a96",
          "neutral800": "#526373",
          "neutral900": "#273c50",
          "neutralBase": "#ffffff",
          "orange100": "#fff1cc",
          "orange200": "#ffde99",
          "orange300": "#FFC766",
          "orange400": "#ffb13f",
          "orange500": "#ff8c00",
          "orange600": "#db6e00",
          "orange700": "#b75400",
          "orange900": "#7a2c00",
          "overlay": "rgba(33,33,33,0.55)",
          "purple100": "#fae3ed",
          "purple200": "#f6c8e1",
          "purple300": "#E5A5CE",
          "purple400": "#cc84b8",
          "purple500": "#aa5b9c",
          "purple600": "#92428b",
          "purple700": "#792d7a",
          "purple900": "#441151",
          "red100": "#ffe5d5",
          "red200": "#ffc5ac",
          "red300": "#FF9E82",
          "red400": "#ff7863",
          "red500": "#ff3b30",
          "red600": "#db2328",
          "red700": "#b7182a",
          "red900": "#7a0929",
          "secondaryOverlay": "rgba(2,168,189,0.10)",
          "shadow": "rgba(0, 0, 0, 0.25)",
          "transparentBlack": "rgba(38, 43, 52, 0.8)",
          "turquoise100": "#c9fbf1",
          "turquoise200": "#95f8ec",
          "turquoise300": "#5EEBE5",
          "turquoise400": "#36d2d8",
          "turquoise500": "#00a8be",
          "turquoise600": "#0083a3",
          "turquoise700": "#006388",
          "turquoise900": "#00335b",
          "yellow100": "#fdf6cb",
          "yellow200": "#fcec97",
          "yellow300": "#F8DC63",
          "yellow400": "#f1cb3c",
          "yellow500": "#e9b200",
          "yellow600": "#c89400",
          "yellow700": "#a77700",
          "yellow900": "#6f4a00",
        },
        "effects": {
          "boxShadow": "0 3px 9px 0 rgba(0, 0, 0, 0.25)",
          "boxShadow24": {
            "boxShadow": "0px 18px 40px rgba(39, 60, 80, 0.4)",
          },
          "buttonActive": {
            "boxShadow": "inset 0 -2px 4px 0 rgba(51, 51, 51, 0.23)",
          },
        },
        "typography": {
          "badges": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 10,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "bigText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "letterSpacing": 0.5,
          },
          "body": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 400,
            "letterSpacing": 0.6,
            "lineHeight": "20px",
          },
          "body1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.5,
            "lineHeight": "28px",
          },
          "button": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.6,
            "lineHeight": "16px",
          },
          "caption": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "captionMedium": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "defaultText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "letterSpacing": 0.5,
          },
          "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
          "fontSizeBase": 14,
          "fontSizeSmall": 11,
          "h1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 96,
            "fontWeight": 300,
            "letterSpacing": -1.5,
            "lineHeight": "112px",
          },
          "h2": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 60,
            "fontWeight": 300,
            "letterSpacing": -0.5,
            "lineHeight": "71px",
          },
          "h3": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 48,
            "fontWeight": 400,
            "lineHeight": "57px",
          },
          "h4": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 34,
            "fontWeight": 400,
            "letterSpacing": 0.25,
            "lineHeight": "40px",
          },
          "h5": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 24,
            "fontWeight": 400,
            "lineHeight": "28px",
          },
          "h6": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "fontWeight": 500,
            "letterSpacing": 0.25,
            "lineHeight": "24px",
          },
          "largeText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "letterSpacing": 0.5,
          },
          "letterSpacing": 0.5,
          "lineHeightBase": 1.5,
          "overline": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 2,
            "lineHeight": "16px",
            "textTransform": "uppercase",
          },
          "smallText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 11,
            "letterSpacing": 0.5,
          },
          "subtitle": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.09,
            "lineHeight": "20px",
          },
          "subtitle1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.15,
            "lineHeight": "24px",
          },
        },
        "utils": {
          "scrollbar": {
            "&::-webkit-scrollbar": {
              "height": 17,
              "width": 17,
            },
            "&::-webkit-scrollbar-thumb": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
            "&::-webkit-scrollbar-thumb:window-inactive": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
          },
          "selection": {
            "& ::-moz-selection": {
              "backgroundColor": "#ffde99",
            },
            "& ::selection": {
              "backgroundColor": "#ffde99",
            },
          },
        },
      }
    }
  >
    <JssProvider
      classNamePrefix="HoiPoi__"
      generateId={[Function]}
      jss={
        Jss {
          "generateId": [Function],
          "id": 1,
          "options": {
            "Renderer": [Function],
            "createGenerateId": [Function],
            "id": {
              "minify": false,
            },
            "plugins": [],
          },
          "plugins": PluginsRegistry {
            "plugins": {
              "external": [
                {
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                  "onUpdate": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onProcessRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
              ],
              "internal": [
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
              ],
            },
            "registry": {
              "onChangeValue": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onCreateRule": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessRule": [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessSheet": [],
              "onProcessStyle": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onUpdate": [
                [Function],
              ],
            },
          },
          "version": "10.9.0",
        }
      }
    >
      <Component
        dividerText=""
        inputProps={
          [
            {
              "placeholder": "Field 1",
            },
            {
              "placeholder": "Field 2",
            },
            {
              "placeholder": "Field 3",
            },
            {
              "placeholder": "Field 4",
            },
            {
              "placeholder": "Field 5",
            },
            {
              "placeholder": "Field 6",
            },
          ]
        }
        inputs={
          [
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
          ]
        }
        label="Label"
        labelMode="vertical"
        onChange={[Function]}
        overrides={{}}
        value={
          [
            "Hello",
            "World",
          ]
        }
      >
        <ForwardRef
          className="HoiPoi__FieldGroup__root-5-0"
          label="Label"
          labelMode="vertical"
          overrides={{}}
        >
          <div
            className="HoiPoi__InputWrapper__root-5-5 HoiPoi__InputWrapper__vertical-5-9 HoiPoi__FieldGroup__root-5-0"
          >
            <div
              className="HoiPoi__InputWrapper__inputWrapper-5-6"
            >
              <Label
                className="HoiPoi__InputWrapper__Label-5-8"
                overrides={{}}
              >
                <div
                  className="HoiPoi__Label__root-5-14 HoiPoi__InputWrapper__Label-5-8"
                >
                  <Text
                    className="HoiPoi__Label__Text-5-15"
                    isTruncated={false}
                    overrides={{}}
                    type="body"
                  >
                    <span
                      className="HoiPoi__Text__root-5-18 HoiPoi__Label__Text-5-15 HoiPoi__Text__body-5-28"
                      style={{}}
                    >
                      Label
                    </span>
                  </Text>
                </div>
              </Label>
              <div
                className="HoiPoi__InputWrapper__formControl-5-11"
              >
                <div
                  className="HoiPoi__FieldGroup__rangeWrapper-5-1"
                >
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="0"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    placeholder="Field 1"
                    type="text"
                    value="Hello"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-5-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-5-5 HoiPoi__InputWrapper__vertical-5-9 HoiPoi__Input__root-5-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-5-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-5-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-5-38"
                            >
                              <input
                                className="HoiPoi__Input__input-5-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Field 1"
                                readOnly={false}
                                type="text"
                                value="Hello"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-5-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-5-52 HoiPoi__Input__isClickable-5-43 HoiPoi__Input__clear-5-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-5-56 HoiPoi__Icon__large-5-59 HoiPoi__Icon__clickable-5-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="1"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    placeholder="Field 2"
                    type="text"
                    value="World"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-5-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-5-5 HoiPoi__InputWrapper__vertical-5-9 HoiPoi__Input__root-5-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-5-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-5-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-5-38"
                            >
                              <input
                                className="HoiPoi__Input__input-5-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Field 2"
                                readOnly={false}
                                type="text"
                                value="World"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-5-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-5-52 HoiPoi__Input__isClickable-5-43 HoiPoi__Input__clear-5-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-5-56 HoiPoi__Icon__large-5-59 HoiPoi__Icon__clickable-5-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="2"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    placeholder="Field 3"
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-5-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-5-5 HoiPoi__InputWrapper__vertical-5-9 HoiPoi__Input__root-5-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-5-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-5-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-5-38"
                            >
                              <input
                                className="HoiPoi__Input__input-5-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Field 3"
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="3"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    placeholder="Field 4"
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-5-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-5-5 HoiPoi__InputWrapper__vertical-5-9 HoiPoi__Input__root-5-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-5-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-5-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-5-38"
                            >
                              <input
                                className="HoiPoi__Input__input-5-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Field 4"
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="4"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    placeholder="Field 5"
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-5-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-5-5 HoiPoi__InputWrapper__vertical-5-9 HoiPoi__Input__root-5-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-5-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-5-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-5-38"
                            >
                              <input
                                className="HoiPoi__Input__input-5-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Field 5"
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="5"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    placeholder="Field 6"
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-5-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-5-5 HoiPoi__InputWrapper__vertical-5-9 HoiPoi__Input__root-5-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-5-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-5-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-5-38"
                            >
                              <input
                                className="HoiPoi__Input__input-5-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                placeholder="Field 6"
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </div>
            </div>
            <Component
              className=""
              overrides={{}}
            />
          </div>
        </ForwardRef>
      </Component>
    </JssProvider>
  </ThemeProvider>
</Component>
`;

exports[`Input default match 1`] = `
<Component>
  <ThemeProvider
    theme={
      {
        "colors": {
          "aqua100": "#e4fafd",
          "aqua200": "#cbf3fc",
          "aqua300": "#AEE5F8",
          "aqua400": "#98d5f1",
          "aqua500": "#76bde8",
          "aqua600": "#5695c7",
          "aqua700": "#3b71a7",
          "aqua900": "#16386f",
          "black": "#3c4248",
          "blue100": "#d3e3fe",
          "blue200": "#a7c5fe",
          "blue300": "#7BA4FE",
          "blue400": "#5a89fd",
          "blue500": "#245dfd",
          "blue600": "#1a47d9",
          "blue700": "#1234b6",
          "blue900": "#061879",
          "green100": "#f4fad2",
          "green200": "#e7f6a6",
          "green300": "#A7E675",
          "green400": "#aecd50",
          "green500": "#86ad20",
          "green600": "#6e9417",
          "green700": "#237c10",
          "green900": "#345306",
          "neutral100": "#f9f9fa",
          "neutral150": "#f6f7f9",
          "neutral200": "#f4f5f6",
          "neutral300": "#e9ecee",
          "neutral400": "#dfe2e5",
          "neutral500": "#d4d8dc",
          "neutral600": "#a9b1b9",
          "neutral700": "#7d8a96",
          "neutral800": "#526373",
          "neutral900": "#273c50",
          "neutralBase": "#ffffff",
          "orange100": "#fff1cc",
          "orange200": "#ffde99",
          "orange300": "#FFC766",
          "orange400": "#ffb13f",
          "orange500": "#ff8c00",
          "orange600": "#db6e00",
          "orange700": "#b75400",
          "orange900": "#7a2c00",
          "overlay": "rgba(33,33,33,0.55)",
          "purple100": "#fae3ed",
          "purple200": "#f6c8e1",
          "purple300": "#E5A5CE",
          "purple400": "#cc84b8",
          "purple500": "#aa5b9c",
          "purple600": "#92428b",
          "purple700": "#792d7a",
          "purple900": "#441151",
          "red100": "#ffe5d5",
          "red200": "#ffc5ac",
          "red300": "#FF9E82",
          "red400": "#ff7863",
          "red500": "#ff3b30",
          "red600": "#db2328",
          "red700": "#b7182a",
          "red900": "#7a0929",
          "secondaryOverlay": "rgba(2,168,189,0.10)",
          "shadow": "rgba(0, 0, 0, 0.25)",
          "transparentBlack": "rgba(38, 43, 52, 0.8)",
          "turquoise100": "#c9fbf1",
          "turquoise200": "#95f8ec",
          "turquoise300": "#5EEBE5",
          "turquoise400": "#36d2d8",
          "turquoise500": "#00a8be",
          "turquoise600": "#0083a3",
          "turquoise700": "#006388",
          "turquoise900": "#00335b",
          "yellow100": "#fdf6cb",
          "yellow200": "#fcec97",
          "yellow300": "#F8DC63",
          "yellow400": "#f1cb3c",
          "yellow500": "#e9b200",
          "yellow600": "#c89400",
          "yellow700": "#a77700",
          "yellow900": "#6f4a00",
        },
        "effects": {
          "boxShadow": "0 3px 9px 0 rgba(0, 0, 0, 0.25)",
          "boxShadow24": {
            "boxShadow": "0px 18px 40px rgba(39, 60, 80, 0.4)",
          },
          "buttonActive": {
            "boxShadow": "inset 0 -2px 4px 0 rgba(51, 51, 51, 0.23)",
          },
        },
        "typography": {
          "badges": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 10,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "bigText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "letterSpacing": 0.5,
          },
          "body": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 400,
            "letterSpacing": 0.6,
            "lineHeight": "20px",
          },
          "body1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.5,
            "lineHeight": "28px",
          },
          "button": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.6,
            "lineHeight": "16px",
          },
          "caption": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "captionMedium": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "defaultText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "letterSpacing": 0.5,
          },
          "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
          "fontSizeBase": 14,
          "fontSizeSmall": 11,
          "h1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 96,
            "fontWeight": 300,
            "letterSpacing": -1.5,
            "lineHeight": "112px",
          },
          "h2": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 60,
            "fontWeight": 300,
            "letterSpacing": -0.5,
            "lineHeight": "71px",
          },
          "h3": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 48,
            "fontWeight": 400,
            "lineHeight": "57px",
          },
          "h4": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 34,
            "fontWeight": 400,
            "letterSpacing": 0.25,
            "lineHeight": "40px",
          },
          "h5": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 24,
            "fontWeight": 400,
            "lineHeight": "28px",
          },
          "h6": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "fontWeight": 500,
            "letterSpacing": 0.25,
            "lineHeight": "24px",
          },
          "largeText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "letterSpacing": 0.5,
          },
          "letterSpacing": 0.5,
          "lineHeightBase": 1.5,
          "overline": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 2,
            "lineHeight": "16px",
            "textTransform": "uppercase",
          },
          "smallText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 11,
            "letterSpacing": 0.5,
          },
          "subtitle": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.09,
            "lineHeight": "20px",
          },
          "subtitle1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.15,
            "lineHeight": "24px",
          },
        },
        "utils": {
          "scrollbar": {
            "&::-webkit-scrollbar": {
              "height": 17,
              "width": 17,
            },
            "&::-webkit-scrollbar-thumb": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
            "&::-webkit-scrollbar-thumb:window-inactive": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
          },
          "selection": {
            "& ::-moz-selection": {
              "backgroundColor": "#ffde99",
            },
            "& ::selection": {
              "backgroundColor": "#ffde99",
            },
          },
        },
      }
    }
  >
    <JssProvider
      classNamePrefix="HoiPoi__"
      generateId={[Function]}
      jss={
        Jss {
          "generateId": [Function],
          "id": 1,
          "options": {
            "Renderer": [Function],
            "createGenerateId": [Function],
            "id": {
              "minify": false,
            },
            "plugins": [],
          },
          "plugins": PluginsRegistry {
            "plugins": {
              "external": [
                {
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                  "onUpdate": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onProcessRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
              ],
              "internal": [
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
              ],
            },
            "registry": {
              "onChangeValue": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onCreateRule": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessRule": [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessSheet": [],
              "onProcessStyle": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onUpdate": [
                [Function],
              ],
            },
          },
          "version": "10.9.0",
        }
      }
    >
      <Component
        dividerText=""
        inputs={
          [
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
          ]
        }
        label="Label"
        labelMode="vertical"
        onChange={[Function]}
        overrides={{}}
        value={
          [
            "Hello",
            "World",
          ]
        }
      >
        <ForwardRef
          className="HoiPoi__FieldGroup__root-1-0"
          label="Label"
          labelMode="vertical"
          overrides={{}}
        >
          <div
            className="HoiPoi__InputWrapper__root-1-5 HoiPoi__InputWrapper__vertical-1-9 HoiPoi__FieldGroup__root-1-0"
          >
            <div
              className="HoiPoi__InputWrapper__inputWrapper-1-6"
            >
              <Label
                className="HoiPoi__InputWrapper__Label-1-8"
                overrides={{}}
              >
                <div
                  className="HoiPoi__Label__root-1-14 HoiPoi__InputWrapper__Label-1-8"
                >
                  <Text
                    className="HoiPoi__Label__Text-1-15"
                    isTruncated={false}
                    overrides={{}}
                    type="body"
                  >
                    <span
                      className="HoiPoi__Text__root-1-18 HoiPoi__Label__Text-1-15 HoiPoi__Text__body-1-28"
                      style={{}}
                    >
                      Label
                    </span>
                  </Text>
                </div>
              </Label>
              <div
                className="HoiPoi__InputWrapper__formControl-1-11"
              >
                <div
                  className="HoiPoi__FieldGroup__rangeWrapper-1-1"
                >
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="0"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="Hello"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-1-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-1-5 HoiPoi__InputWrapper__vertical-1-9 HoiPoi__Input__root-1-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-1-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-1-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-1-38"
                            >
                              <input
                                className="HoiPoi__Input__input-1-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="Hello"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-1-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-1-52 HoiPoi__Input__isClickable-1-43 HoiPoi__Input__clear-1-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-1-56 HoiPoi__Icon__large-1-59 HoiPoi__Icon__clickable-1-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="1"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="World"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-1-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-1-5 HoiPoi__InputWrapper__vertical-1-9 HoiPoi__Input__root-1-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-1-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-1-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-1-38"
                            >
                              <input
                                className="HoiPoi__Input__input-1-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="World"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-1-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-1-52 HoiPoi__Input__isClickable-1-43 HoiPoi__Input__clear-1-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-1-56 HoiPoi__Icon__large-1-59 HoiPoi__Icon__clickable-1-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </div>
            </div>
            <Component
              className=""
              overrides={{}}
            />
          </div>
        </ForwardRef>
      </Component>
    </JssProvider>
  </ThemeProvider>
</Component>
`;

exports[`Input full width with divider 1`] = `
<Component>
  <ThemeProvider
    theme={
      {
        "colors": {
          "aqua100": "#e4fafd",
          "aqua200": "#cbf3fc",
          "aqua300": "#AEE5F8",
          "aqua400": "#98d5f1",
          "aqua500": "#76bde8",
          "aqua600": "#5695c7",
          "aqua700": "#3b71a7",
          "aqua900": "#16386f",
          "black": "#3c4248",
          "blue100": "#d3e3fe",
          "blue200": "#a7c5fe",
          "blue300": "#7BA4FE",
          "blue400": "#5a89fd",
          "blue500": "#245dfd",
          "blue600": "#1a47d9",
          "blue700": "#1234b6",
          "blue900": "#061879",
          "green100": "#f4fad2",
          "green200": "#e7f6a6",
          "green300": "#A7E675",
          "green400": "#aecd50",
          "green500": "#86ad20",
          "green600": "#6e9417",
          "green700": "#237c10",
          "green900": "#345306",
          "neutral100": "#f9f9fa",
          "neutral150": "#f6f7f9",
          "neutral200": "#f4f5f6",
          "neutral300": "#e9ecee",
          "neutral400": "#dfe2e5",
          "neutral500": "#d4d8dc",
          "neutral600": "#a9b1b9",
          "neutral700": "#7d8a96",
          "neutral800": "#526373",
          "neutral900": "#273c50",
          "neutralBase": "#ffffff",
          "orange100": "#fff1cc",
          "orange200": "#ffde99",
          "orange300": "#FFC766",
          "orange400": "#ffb13f",
          "orange500": "#ff8c00",
          "orange600": "#db6e00",
          "orange700": "#b75400",
          "orange900": "#7a2c00",
          "overlay": "rgba(33,33,33,0.55)",
          "purple100": "#fae3ed",
          "purple200": "#f6c8e1",
          "purple300": "#E5A5CE",
          "purple400": "#cc84b8",
          "purple500": "#aa5b9c",
          "purple600": "#92428b",
          "purple700": "#792d7a",
          "purple900": "#441151",
          "red100": "#ffe5d5",
          "red200": "#ffc5ac",
          "red300": "#FF9E82",
          "red400": "#ff7863",
          "red500": "#ff3b30",
          "red600": "#db2328",
          "red700": "#b7182a",
          "red900": "#7a0929",
          "secondaryOverlay": "rgba(2,168,189,0.10)",
          "shadow": "rgba(0, 0, 0, 0.25)",
          "transparentBlack": "rgba(38, 43, 52, 0.8)",
          "turquoise100": "#c9fbf1",
          "turquoise200": "#95f8ec",
          "turquoise300": "#5EEBE5",
          "turquoise400": "#36d2d8",
          "turquoise500": "#00a8be",
          "turquoise600": "#0083a3",
          "turquoise700": "#006388",
          "turquoise900": "#00335b",
          "yellow100": "#fdf6cb",
          "yellow200": "#fcec97",
          "yellow300": "#F8DC63",
          "yellow400": "#f1cb3c",
          "yellow500": "#e9b200",
          "yellow600": "#c89400",
          "yellow700": "#a77700",
          "yellow900": "#6f4a00",
        },
        "effects": {
          "boxShadow": "0 3px 9px 0 rgba(0, 0, 0, 0.25)",
          "boxShadow24": {
            "boxShadow": "0px 18px 40px rgba(39, 60, 80, 0.4)",
          },
          "buttonActive": {
            "boxShadow": "inset 0 -2px 4px 0 rgba(51, 51, 51, 0.23)",
          },
        },
        "typography": {
          "badges": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 10,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "bigText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "letterSpacing": 0.5,
          },
          "body": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 400,
            "letterSpacing": 0.6,
            "lineHeight": "20px",
          },
          "body1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.5,
            "lineHeight": "28px",
          },
          "button": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.6,
            "lineHeight": "16px",
          },
          "caption": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "captionMedium": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "defaultText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "letterSpacing": 0.5,
          },
          "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
          "fontSizeBase": 14,
          "fontSizeSmall": 11,
          "h1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 96,
            "fontWeight": 300,
            "letterSpacing": -1.5,
            "lineHeight": "112px",
          },
          "h2": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 60,
            "fontWeight": 300,
            "letterSpacing": -0.5,
            "lineHeight": "71px",
          },
          "h3": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 48,
            "fontWeight": 400,
            "lineHeight": "57px",
          },
          "h4": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 34,
            "fontWeight": 400,
            "letterSpacing": 0.25,
            "lineHeight": "40px",
          },
          "h5": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 24,
            "fontWeight": 400,
            "lineHeight": "28px",
          },
          "h6": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "fontWeight": 500,
            "letterSpacing": 0.25,
            "lineHeight": "24px",
          },
          "largeText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "letterSpacing": 0.5,
          },
          "letterSpacing": 0.5,
          "lineHeightBase": 1.5,
          "overline": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 2,
            "lineHeight": "16px",
            "textTransform": "uppercase",
          },
          "smallText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 11,
            "letterSpacing": 0.5,
          },
          "subtitle": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.09,
            "lineHeight": "20px",
          },
          "subtitle1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.15,
            "lineHeight": "24px",
          },
        },
        "utils": {
          "scrollbar": {
            "&::-webkit-scrollbar": {
              "height": 17,
              "width": 17,
            },
            "&::-webkit-scrollbar-thumb": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
            "&::-webkit-scrollbar-thumb:window-inactive": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
          },
          "selection": {
            "& ::-moz-selection": {
              "backgroundColor": "#ffde99",
            },
            "& ::selection": {
              "backgroundColor": "#ffde99",
            },
          },
        },
      }
    }
  >
    <JssProvider
      classNamePrefix="HoiPoi__"
      generateId={[Function]}
      jss={
        Jss {
          "generateId": [Function],
          "id": 1,
          "options": {
            "Renderer": [Function],
            "createGenerateId": [Function],
            "id": {
              "minify": false,
            },
            "plugins": [],
          },
          "plugins": PluginsRegistry {
            "plugins": {
              "external": [
                {
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                  "onUpdate": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onProcessRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
              ],
              "internal": [
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
              ],
            },
            "registry": {
              "onChangeValue": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onCreateRule": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessRule": [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessSheet": [],
              "onProcessStyle": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onUpdate": [
                [Function],
              ],
            },
          },
          "version": "10.9.0",
        }
      }
    >
      <Component
        dividerText="-"
        inputs={
          [
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
          ]
        }
        isFullWidth={true}
        label="Label"
        labelMode="vertical"
        onChange={[Function]}
        overrides={{}}
        value={
          [
            "Hello",
            "World",
          ]
        }
      >
        <ForwardRef
          className="HoiPoi__FieldGroup__root-3-0 HoiPoi__FieldGroup__isFullWidth-3-4"
          isFullWidth={true}
          label="Label"
          labelMode="vertical"
          overrides={{}}
        >
          <div
            className="HoiPoi__InputWrapper__root-3-5 HoiPoi__InputWrapper__vertical-3-9 HoiPoi__InputWrapper__isFullWidth-3-12 HoiPoi__FieldGroup__root-3-0 HoiPoi__FieldGroup__isFullWidth-3-4"
          >
            <div
              className="HoiPoi__InputWrapper__inputWrapper-3-6"
            >
              <Label
                className="HoiPoi__InputWrapper__Label-3-8"
                overrides={{}}
              >
                <div
                  className="HoiPoi__Label__root-3-14 HoiPoi__InputWrapper__Label-3-8"
                >
                  <Text
                    className="HoiPoi__Label__Text-3-15"
                    isTruncated={false}
                    overrides={{}}
                    type="body"
                  >
                    <span
                      className="HoiPoi__Text__root-3-18 HoiPoi__Label__Text-3-15 HoiPoi__Text__body-3-28"
                      style={{}}
                    >
                      Label
                    </span>
                  </Text>
                </div>
              </Label>
              <div
                className="HoiPoi__InputWrapper__formControl-3-11"
              >
                <div
                  className="HoiPoi__FieldGroup__rangeWrapper-3-1"
                >
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isFullWidth={true}
                    isReadOnly={false}
                    key="0"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="Hello"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-3-36 HoiPoi__Input__isFullWidth-3-48"
                      error={false}
                      isFullWidth={true}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-3-5 HoiPoi__InputWrapper__vertical-3-9 HoiPoi__InputWrapper__isFullWidth-3-12 HoiPoi__Input__root-3-36 HoiPoi__Input__isFullWidth-3-48"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-3-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-3-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-3-38"
                            >
                              <input
                                className="HoiPoi__Input__input-3-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="Hello"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-3-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-3-52 HoiPoi__Input__isClickable-3-43 HoiPoi__Input__clear-3-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-3-56 HoiPoi__Icon__large-3-59 HoiPoi__Icon__clickable-3-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          isFullWidth={true}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <div
                    className="HoiPoi__FieldGroup__divider-3-2"
                    key="0-divider"
                  >
                    <span
                      className="HoiPoi__FieldGroup__dividerText-3-3"
                    >
                      -
                    </span>
                  </div>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isFullWidth={true}
                    isReadOnly={false}
                    key="1"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="World"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-3-36 HoiPoi__Input__isFullWidth-3-48"
                      error={false}
                      isFullWidth={true}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-3-5 HoiPoi__InputWrapper__vertical-3-9 HoiPoi__InputWrapper__isFullWidth-3-12 HoiPoi__Input__root-3-36 HoiPoi__Input__isFullWidth-3-48"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-3-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-3-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-3-38"
                            >
                              <input
                                className="HoiPoi__Input__input-3-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="World"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-3-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-3-52 HoiPoi__Input__isClickable-3-43 HoiPoi__Input__clear-3-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-3-56 HoiPoi__Icon__large-3-59 HoiPoi__Icon__clickable-3-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          isFullWidth={true}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </div>
            </div>
            <Component
              className=""
              isFullWidth={true}
              overrides={{}}
            />
          </div>
        </ForwardRef>
      </Component>
    </JssProvider>
  </ThemeProvider>
</Component>
`;

exports[`Input horizontal 1`] = `
<Component>
  <ThemeProvider
    theme={
      {
        "colors": {
          "aqua100": "#e4fafd",
          "aqua200": "#cbf3fc",
          "aqua300": "#AEE5F8",
          "aqua400": "#98d5f1",
          "aqua500": "#76bde8",
          "aqua600": "#5695c7",
          "aqua700": "#3b71a7",
          "aqua900": "#16386f",
          "black": "#3c4248",
          "blue100": "#d3e3fe",
          "blue200": "#a7c5fe",
          "blue300": "#7BA4FE",
          "blue400": "#5a89fd",
          "blue500": "#245dfd",
          "blue600": "#1a47d9",
          "blue700": "#1234b6",
          "blue900": "#061879",
          "green100": "#f4fad2",
          "green200": "#e7f6a6",
          "green300": "#A7E675",
          "green400": "#aecd50",
          "green500": "#86ad20",
          "green600": "#6e9417",
          "green700": "#237c10",
          "green900": "#345306",
          "neutral100": "#f9f9fa",
          "neutral150": "#f6f7f9",
          "neutral200": "#f4f5f6",
          "neutral300": "#e9ecee",
          "neutral400": "#dfe2e5",
          "neutral500": "#d4d8dc",
          "neutral600": "#a9b1b9",
          "neutral700": "#7d8a96",
          "neutral800": "#526373",
          "neutral900": "#273c50",
          "neutralBase": "#ffffff",
          "orange100": "#fff1cc",
          "orange200": "#ffde99",
          "orange300": "#FFC766",
          "orange400": "#ffb13f",
          "orange500": "#ff8c00",
          "orange600": "#db6e00",
          "orange700": "#b75400",
          "orange900": "#7a2c00",
          "overlay": "rgba(33,33,33,0.55)",
          "purple100": "#fae3ed",
          "purple200": "#f6c8e1",
          "purple300": "#E5A5CE",
          "purple400": "#cc84b8",
          "purple500": "#aa5b9c",
          "purple600": "#92428b",
          "purple700": "#792d7a",
          "purple900": "#441151",
          "red100": "#ffe5d5",
          "red200": "#ffc5ac",
          "red300": "#FF9E82",
          "red400": "#ff7863",
          "red500": "#ff3b30",
          "red600": "#db2328",
          "red700": "#b7182a",
          "red900": "#7a0929",
          "secondaryOverlay": "rgba(2,168,189,0.10)",
          "shadow": "rgba(0, 0, 0, 0.25)",
          "transparentBlack": "rgba(38, 43, 52, 0.8)",
          "turquoise100": "#c9fbf1",
          "turquoise200": "#95f8ec",
          "turquoise300": "#5EEBE5",
          "turquoise400": "#36d2d8",
          "turquoise500": "#00a8be",
          "turquoise600": "#0083a3",
          "turquoise700": "#006388",
          "turquoise900": "#00335b",
          "yellow100": "#fdf6cb",
          "yellow200": "#fcec97",
          "yellow300": "#F8DC63",
          "yellow400": "#f1cb3c",
          "yellow500": "#e9b200",
          "yellow600": "#c89400",
          "yellow700": "#a77700",
          "yellow900": "#6f4a00",
        },
        "effects": {
          "boxShadow": "0 3px 9px 0 rgba(0, 0, 0, 0.25)",
          "boxShadow24": {
            "boxShadow": "0px 18px 40px rgba(39, 60, 80, 0.4)",
          },
          "buttonActive": {
            "boxShadow": "inset 0 -2px 4px 0 rgba(51, 51, 51, 0.23)",
          },
        },
        "typography": {
          "badges": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 10,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "bigText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "letterSpacing": 0.5,
          },
          "body": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 400,
            "letterSpacing": 0.6,
            "lineHeight": "20px",
          },
          "body1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.5,
            "lineHeight": "28px",
          },
          "button": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.6,
            "lineHeight": "16px",
          },
          "caption": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "captionMedium": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "defaultText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "letterSpacing": 0.5,
          },
          "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
          "fontSizeBase": 14,
          "fontSizeSmall": 11,
          "h1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 96,
            "fontWeight": 300,
            "letterSpacing": -1.5,
            "lineHeight": "112px",
          },
          "h2": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 60,
            "fontWeight": 300,
            "letterSpacing": -0.5,
            "lineHeight": "71px",
          },
          "h3": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 48,
            "fontWeight": 400,
            "lineHeight": "57px",
          },
          "h4": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 34,
            "fontWeight": 400,
            "letterSpacing": 0.25,
            "lineHeight": "40px",
          },
          "h5": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 24,
            "fontWeight": 400,
            "lineHeight": "28px",
          },
          "h6": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "fontWeight": 500,
            "letterSpacing": 0.25,
            "lineHeight": "24px",
          },
          "largeText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "letterSpacing": 0.5,
          },
          "letterSpacing": 0.5,
          "lineHeightBase": 1.5,
          "overline": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 2,
            "lineHeight": "16px",
            "textTransform": "uppercase",
          },
          "smallText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 11,
            "letterSpacing": 0.5,
          },
          "subtitle": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.09,
            "lineHeight": "20px",
          },
          "subtitle1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.15,
            "lineHeight": "24px",
          },
        },
        "utils": {
          "scrollbar": {
            "&::-webkit-scrollbar": {
              "height": 17,
              "width": 17,
            },
            "&::-webkit-scrollbar-thumb": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
            "&::-webkit-scrollbar-thumb:window-inactive": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
          },
          "selection": {
            "& ::-moz-selection": {
              "backgroundColor": "#ffde99",
            },
            "& ::selection": {
              "backgroundColor": "#ffde99",
            },
          },
        },
      }
    }
  >
    <JssProvider
      classNamePrefix="HoiPoi__"
      generateId={[Function]}
      jss={
        Jss {
          "generateId": [Function],
          "id": 1,
          "options": {
            "Renderer": [Function],
            "createGenerateId": [Function],
            "id": {
              "minify": false,
            },
            "plugins": [],
          },
          "plugins": PluginsRegistry {
            "plugins": {
              "external": [
                {
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                  "onUpdate": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onProcessRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
              ],
              "internal": [
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
              ],
            },
            "registry": {
              "onChangeValue": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onCreateRule": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessRule": [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessSheet": [],
              "onProcessStyle": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onUpdate": [
                [Function],
              ],
            },
          },
          "version": "10.9.0",
        }
      }
    >
      <Component
        dividerText=""
        inputs={
          [
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
          ]
        }
        label="Label"
        labelMode="horizontal"
        onChange={[Function]}
        overrides={{}}
        value={
          [
            "Hello",
            "World",
          ]
        }
      >
        <ForwardRef
          className="HoiPoi__FieldGroup__root-2-0"
          label="Label"
          labelMode="horizontal"
          overrides={{}}
        >
          <div
            className="HoiPoi__InputWrapper__root-2-5 HoiPoi__InputWrapper__horizontal-2-10 HoiPoi__FieldGroup__root-2-0"
          >
            <div
              className="HoiPoi__InputWrapper__inputWrapper-2-6"
            >
              <Label
                className="HoiPoi__InputWrapper__Label-2-8"
                overrides={{}}
              >
                <div
                  className="HoiPoi__Label__root-2-14 HoiPoi__InputWrapper__Label-2-8"
                >
                  <Text
                    className="HoiPoi__Label__Text-2-15"
                    isTruncated={false}
                    overrides={{}}
                    type="body"
                  >
                    <span
                      className="HoiPoi__Text__root-2-18 HoiPoi__Label__Text-2-15 HoiPoi__Text__body-2-28"
                      style={{}}
                    >
                      Label
                    </span>
                  </Text>
                </div>
              </Label>
              <div
                className="HoiPoi__InputWrapper__formControl-2-11"
              >
                <div
                  className="HoiPoi__FieldGroup__rangeWrapper-2-1"
                >
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="0"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="Hello"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-2-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-2-5 HoiPoi__InputWrapper__vertical-2-9 HoiPoi__Input__root-2-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-2-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-2-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-2-38"
                            >
                              <input
                                className="HoiPoi__Input__input-2-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="Hello"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-2-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-2-52 HoiPoi__Input__isClickable-2-43 HoiPoi__Input__clear-2-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-2-56 HoiPoi__Icon__large-2-59 HoiPoi__Icon__clickable-2-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="1"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="World"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-2-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-2-5 HoiPoi__InputWrapper__vertical-2-9 HoiPoi__Input__root-2-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-2-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-2-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-2-38"
                            >
                              <input
                                className="HoiPoi__Input__input-2-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="World"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-2-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-2-52 HoiPoi__Input__isClickable-2-43 HoiPoi__Input__clear-2-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-2-56 HoiPoi__Icon__large-2-59 HoiPoi__Icon__clickable-2-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </div>
            </div>
            <Component
              className="HoiPoi__InputWrapper__fieldBottom-2-7"
              overrides={{}}
            />
          </div>
        </ForwardRef>
      </Component>
    </JssProvider>
  </ThemeProvider>
</Component>
`;

exports[`Input multiple fields with custom dividers 1`] = `
<Component>
  <ThemeProvider
    theme={
      {
        "colors": {
          "aqua100": "#e4fafd",
          "aqua200": "#cbf3fc",
          "aqua300": "#AEE5F8",
          "aqua400": "#98d5f1",
          "aqua500": "#76bde8",
          "aqua600": "#5695c7",
          "aqua700": "#3b71a7",
          "aqua900": "#16386f",
          "black": "#3c4248",
          "blue100": "#d3e3fe",
          "blue200": "#a7c5fe",
          "blue300": "#7BA4FE",
          "blue400": "#5a89fd",
          "blue500": "#245dfd",
          "blue600": "#1a47d9",
          "blue700": "#1234b6",
          "blue900": "#061879",
          "green100": "#f4fad2",
          "green200": "#e7f6a6",
          "green300": "#A7E675",
          "green400": "#aecd50",
          "green500": "#86ad20",
          "green600": "#6e9417",
          "green700": "#237c10",
          "green900": "#345306",
          "neutral100": "#f9f9fa",
          "neutral150": "#f6f7f9",
          "neutral200": "#f4f5f6",
          "neutral300": "#e9ecee",
          "neutral400": "#dfe2e5",
          "neutral500": "#d4d8dc",
          "neutral600": "#a9b1b9",
          "neutral700": "#7d8a96",
          "neutral800": "#526373",
          "neutral900": "#273c50",
          "neutralBase": "#ffffff",
          "orange100": "#fff1cc",
          "orange200": "#ffde99",
          "orange300": "#FFC766",
          "orange400": "#ffb13f",
          "orange500": "#ff8c00",
          "orange600": "#db6e00",
          "orange700": "#b75400",
          "orange900": "#7a2c00",
          "overlay": "rgba(33,33,33,0.55)",
          "purple100": "#fae3ed",
          "purple200": "#f6c8e1",
          "purple300": "#E5A5CE",
          "purple400": "#cc84b8",
          "purple500": "#aa5b9c",
          "purple600": "#92428b",
          "purple700": "#792d7a",
          "purple900": "#441151",
          "red100": "#ffe5d5",
          "red200": "#ffc5ac",
          "red300": "#FF9E82",
          "red400": "#ff7863",
          "red500": "#ff3b30",
          "red600": "#db2328",
          "red700": "#b7182a",
          "red900": "#7a0929",
          "secondaryOverlay": "rgba(2,168,189,0.10)",
          "shadow": "rgba(0, 0, 0, 0.25)",
          "transparentBlack": "rgba(38, 43, 52, 0.8)",
          "turquoise100": "#c9fbf1",
          "turquoise200": "#95f8ec",
          "turquoise300": "#5EEBE5",
          "turquoise400": "#36d2d8",
          "turquoise500": "#00a8be",
          "turquoise600": "#0083a3",
          "turquoise700": "#006388",
          "turquoise900": "#00335b",
          "yellow100": "#fdf6cb",
          "yellow200": "#fcec97",
          "yellow300": "#F8DC63",
          "yellow400": "#f1cb3c",
          "yellow500": "#e9b200",
          "yellow600": "#c89400",
          "yellow700": "#a77700",
          "yellow900": "#6f4a00",
        },
        "effects": {
          "boxShadow": "0 3px 9px 0 rgba(0, 0, 0, 0.25)",
          "boxShadow24": {
            "boxShadow": "0px 18px 40px rgba(39, 60, 80, 0.4)",
          },
          "buttonActive": {
            "boxShadow": "inset 0 -2px 4px 0 rgba(51, 51, 51, 0.23)",
          },
        },
        "typography": {
          "badges": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 10,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "bigText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "letterSpacing": 0.5,
          },
          "body": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 400,
            "letterSpacing": 0.6,
            "lineHeight": "20px",
          },
          "body1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.5,
            "lineHeight": "28px",
          },
          "button": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.6,
            "lineHeight": "16px",
          },
          "caption": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 400,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "captionMedium": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 0.4,
            "lineHeight": "16px",
          },
          "defaultText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "letterSpacing": 0.5,
          },
          "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
          "fontSizeBase": 14,
          "fontSizeSmall": 11,
          "h1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 96,
            "fontWeight": 300,
            "letterSpacing": -1.5,
            "lineHeight": "112px",
          },
          "h2": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 60,
            "fontWeight": 300,
            "letterSpacing": -0.5,
            "lineHeight": "71px",
          },
          "h3": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 48,
            "fontWeight": 400,
            "lineHeight": "57px",
          },
          "h4": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 34,
            "fontWeight": 400,
            "letterSpacing": 0.25,
            "lineHeight": "40px",
          },
          "h5": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 24,
            "fontWeight": 400,
            "lineHeight": "28px",
          },
          "h6": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 20,
            "fontWeight": 500,
            "letterSpacing": 0.25,
            "lineHeight": "24px",
          },
          "largeText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "letterSpacing": 0.5,
          },
          "letterSpacing": 0.5,
          "lineHeightBase": 1.5,
          "overline": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 12,
            "fontWeight": 500,
            "letterSpacing": 2,
            "lineHeight": "16px",
            "textTransform": "uppercase",
          },
          "smallText": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 11,
            "letterSpacing": 0.5,
          },
          "subtitle": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 14,
            "fontWeight": 500,
            "letterSpacing": 0.09,
            "lineHeight": "20px",
          },
          "subtitle1": {
            "fontFamily": ""Roboto", "Helvetica Neue", Helvetica, Arial, sans-serif",
            "fontSize": 16,
            "fontWeight": 400,
            "letterSpacing": 0.15,
            "lineHeight": "24px",
          },
        },
        "utils": {
          "scrollbar": {
            "&::-webkit-scrollbar": {
              "height": 17,
              "width": 17,
            },
            "&::-webkit-scrollbar-thumb": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
            "&::-webkit-scrollbar-thumb:window-inactive": {
              "background": "#dfe2e5",
              "backgroundClip": "content-box",
              "border": "4px solid rgba(0, 0, 0, 0)",
              "borderRadius": 10,
            },
          },
          "selection": {
            "& ::-moz-selection": {
              "backgroundColor": "#ffde99",
            },
            "& ::selection": {
              "backgroundColor": "#ffde99",
            },
          },
        },
      }
    }
  >
    <JssProvider
      classNamePrefix="HoiPoi__"
      generateId={[Function]}
      jss={
        Jss {
          "generateId": [Function],
          "id": 1,
          "options": {
            "Renderer": [Function],
            "createGenerateId": [Function],
            "id": {
              "minify": false,
            },
            "plugins": [],
          },
          "plugins": PluginsRegistry {
            "plugins": {
              "external": [
                {
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                  "onUpdate": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onProcessRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                  "onProcessRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onProcessRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onProcessStyle": [Function],
                },
              ],
              "internal": [
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onChangeValue": [Function],
                  "onCreateRule": [Function],
                  "onProcessStyle": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
                {
                  "onCreateRule": [Function],
                },
              ],
            },
            "registry": {
              "onChangeValue": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onCreateRule": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessRule": [
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onProcessSheet": [],
              "onProcessStyle": [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "onUpdate": [
                [Function],
              ],
            },
          },
          "version": "10.9.0",
        }
      }
    >
      <Component
        divider={
          <Icon
            name="arrowRight"
            overrides={{}}
            size="medium"
          />
        }
        dividerText=""
        inputs={
          [
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "hideClear": false,
                "isCopyable": false,
                "isReadOnly": false,
                "labelMode": "vertical",
                "numberDecimals": 2,
                "onChange": [Function],
                "overrides": {},
                "type": "text",
                "value": "",
              },
              "overrides": [
                "root",
                "input",
                "preComponent",
                "postComponent",
                "inputComponents",
              ],
              "propTypes": {
                "className": [Function],
                "component": [Function],
                "error": [Function],
                "hideClear": [Function],
                "hint": [Function],
                "id": [Function],
                "info": [Function],
                "isCopyable": [Function],
                "isFullWidth": [Function],
                "isReadOnly": [Function],
                "isRequired": [Function],
                "label": [Function],
                "labelMode": [Function],
                "name": [Function],
                "numberDecimals": [Function],
                "onBlur": [Function],
                "onChange": [Function],
                "onCopy": [Function],
                "onEnter": [Function],
                "onFocus": [Function],
                "overrides": [Function],
                "placeholder": [Function],
                "postComponent": [Function],
                "preComponent": [Function],
                "ref": [Function],
                "type": [Function],
                "value": [Function],
              },
              "render": [Function],
            },
          ]
        }
        label="Label"
        labelMode="vertical"
        onChange={[Function]}
        overrides={{}}
        value={
          [
            "Hello",
            "World",
          ]
        }
      >
        <ForwardRef
          className="HoiPoi__FieldGroup__root-4-0"
          label="Label"
          labelMode="vertical"
          overrides={{}}
        >
          <div
            className="HoiPoi__InputWrapper__root-4-5 HoiPoi__InputWrapper__vertical-4-9 HoiPoi__FieldGroup__root-4-0"
          >
            <div
              className="HoiPoi__InputWrapper__inputWrapper-4-6"
            >
              <Label
                className="HoiPoi__InputWrapper__Label-4-8"
                overrides={{}}
              >
                <div
                  className="HoiPoi__Label__root-4-14 HoiPoi__InputWrapper__Label-4-8"
                >
                  <Text
                    className="HoiPoi__Label__Text-4-15"
                    isTruncated={false}
                    overrides={{}}
                    type="body"
                  >
                    <span
                      className="HoiPoi__Text__root-4-18 HoiPoi__Label__Text-4-15 HoiPoi__Text__body-4-28"
                      style={{}}
                    >
                      Label
                    </span>
                  </Text>
                </div>
              </Label>
              <div
                className="HoiPoi__InputWrapper__formControl-4-11"
              >
                <div
                  className="HoiPoi__FieldGroup__rangeWrapper-4-1"
                >
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="0"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="Hello"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-4-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-4-5 HoiPoi__InputWrapper__vertical-4-9 HoiPoi__Input__root-4-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-4-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-4-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-4-38"
                            >
                              <input
                                className="HoiPoi__Input__input-4-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="Hello"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-4-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-4-52 HoiPoi__Input__isClickable-4-43 HoiPoi__Input__clear-4-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-4-56 HoiPoi__Icon__large-4-59 HoiPoi__Icon__clickable-4-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <div
                    className="HoiPoi__FieldGroup__divider-4-2"
                    key="0-divider"
                  >
                    <Icon
                      name="arrowRight"
                      overrides={{}}
                      size="medium"
                    >
                      <span
                        className="HoiPoi__Icon__root-4-56 HoiPoi__Icon__medium-4-58"
                        onMouseDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        onMouseUp={[Function]}
                      >
                        <ArrowRight
                          color="#7d8a96"
                        >
                          <svg
                            viewBox="0 0 18 18"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M3 9l1.058-1.058 4.192 4.185V3h1.5v9.127l4.193-4.185L15 9l-6 6z"
                              fill="#7d8a96"
                              fillRule="evenodd"
                              transform="rotate(-90) translate(-18, 0)"
                            />
                          </svg>
                        </ArrowRight>
                      </span>
                    </Icon>
                  </div>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="1"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value="World"
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-4-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-4-5 HoiPoi__InputWrapper__vertical-4-9 HoiPoi__Input__root-4-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-4-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-4-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-4-38"
                            >
                              <input
                                className="HoiPoi__Input__input-4-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value="World"
                              />
                              <div
                                className="HoiPoi__Input__postComponent-4-50"
                              >
                                <div
                                  className="HoiPoi__Input__postComponentClose-4-52 HoiPoi__Input__isClickable-4-43 HoiPoi__Input__clear-4-44"
                                  key="close"
                                >
                                  <Icon
                                    name="closeSmall"
                                    onClick={[Function]}
                                    overrides={{}}
                                    size="large"
                                  >
                                    <span
                                      className="HoiPoi__Icon__root-4-56 HoiPoi__Icon__large-4-59 HoiPoi__Icon__clickable-4-63"
                                      onClick={[Function]}
                                      onMouseDown={[Function]}
                                      onMouseOut={[Function]}
                                      onMouseOver={[Function]}
                                      onMouseUp={[Function]}
                                    >
                                      <CloseSmall
                                        color="#7d8a96"
                                      >
                                        <svg
                                          viewBox="0 0 24 24"
                                          xmlns="http://www.w3.org/2000/svg"
                                        >
                                          <path
                                            clipRule="evenodd"
                                            d="M11.9289 13.3288L14.7292 16.1291L16.1434 14.7148L13.3431 11.9146L16.1286 9.12906L14.7144 7.71484L11.9289 10.5003L9.14337 7.71484L7.72915 9.12906L10.5146 11.9146L7.71436 14.7148L9.12857 16.1291L11.9289 13.3288Z"
                                            fill="#7d8a96"
                                            fillRule="evenodd"
                                          />
                                        </svg>
                                      </CloseSmall>
                                    </span>
                                  </Icon>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <div
                    className="HoiPoi__FieldGroup__divider-4-2"
                    key="1-divider"
                  >
                    <Icon
                      name="arrowRight"
                      overrides={{}}
                      size="medium"
                    >
                      <span
                        className="HoiPoi__Icon__root-4-56 HoiPoi__Icon__medium-4-58"
                        onMouseDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        onMouseUp={[Function]}
                      >
                        <ArrowRight
                          color="#7d8a96"
                        >
                          <svg
                            viewBox="0 0 18 18"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M3 9l1.058-1.058 4.192 4.185V3h1.5v9.127l4.193-4.185L15 9l-6 6z"
                              fill="#7d8a96"
                              fillRule="evenodd"
                              transform="rotate(-90) translate(-18, 0)"
                            />
                          </svg>
                        </ArrowRight>
                      </span>
                    </Icon>
                  </div>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="2"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-4-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-4-5 HoiPoi__InputWrapper__vertical-4-9 HoiPoi__Input__root-4-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-4-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-4-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-4-38"
                            >
                              <input
                                className="HoiPoi__Input__input-4-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <div
                    className="HoiPoi__FieldGroup__divider-4-2"
                    key="2-divider"
                  >
                    <Icon
                      name="arrowRight"
                      overrides={{}}
                      size="medium"
                    >
                      <span
                        className="HoiPoi__Icon__root-4-56 HoiPoi__Icon__medium-4-58"
                        onMouseDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        onMouseUp={[Function]}
                      >
                        <ArrowRight
                          color="#7d8a96"
                        >
                          <svg
                            viewBox="0 0 18 18"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M3 9l1.058-1.058 4.192 4.185V3h1.5v9.127l4.193-4.185L15 9l-6 6z"
                              fill="#7d8a96"
                              fillRule="evenodd"
                              transform="rotate(-90) translate(-18, 0)"
                            />
                          </svg>
                        </ArrowRight>
                      </span>
                    </Icon>
                  </div>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="3"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-4-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-4-5 HoiPoi__InputWrapper__vertical-4-9 HoiPoi__Input__root-4-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-4-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-4-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-4-38"
                            >
                              <input
                                className="HoiPoi__Input__input-4-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <div
                    className="HoiPoi__FieldGroup__divider-4-2"
                    key="3-divider"
                  >
                    <Icon
                      name="arrowRight"
                      overrides={{}}
                      size="medium"
                    >
                      <span
                        className="HoiPoi__Icon__root-4-56 HoiPoi__Icon__medium-4-58"
                        onMouseDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        onMouseUp={[Function]}
                      >
                        <ArrowRight
                          color="#7d8a96"
                        >
                          <svg
                            viewBox="0 0 18 18"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M3 9l1.058-1.058 4.192 4.185V3h1.5v9.127l4.193-4.185L15 9l-6 6z"
                              fill="#7d8a96"
                              fillRule="evenodd"
                              transform="rotate(-90) translate(-18, 0)"
                            />
                          </svg>
                        </ArrowRight>
                      </span>
                    </Icon>
                  </div>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="4"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-4-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-4-5 HoiPoi__InputWrapper__vertical-4-9 HoiPoi__Input__root-4-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-4-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-4-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-4-38"
                            >
                              <input
                                className="HoiPoi__Input__input-4-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                  <div
                    className="HoiPoi__FieldGroup__divider-4-2"
                    key="4-divider"
                  >
                    <Icon
                      name="arrowRight"
                      overrides={{}}
                      size="medium"
                    >
                      <span
                        className="HoiPoi__Icon__root-4-56 HoiPoi__Icon__medium-4-58"
                        onMouseDown={[Function]}
                        onMouseOut={[Function]}
                        onMouseOver={[Function]}
                        onMouseUp={[Function]}
                      >
                        <ArrowRight
                          color="#7d8a96"
                        >
                          <svg
                            viewBox="0 0 18 18"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M3 9l1.058-1.058 4.192 4.185V3h1.5v9.127l4.193-4.185L15 9l-6 6z"
                              fill="#7d8a96"
                              fillRule="evenodd"
                              transform="rotate(-90) translate(-18, 0)"
                            />
                          </svg>
                        </ArrowRight>
                      </span>
                    </Icon>
                  </div>
                  <ForwardRef
                    error={false}
                    hideClear={false}
                    isCopyable={false}
                    isReadOnly={false}
                    key="5"
                    labelMode="vertical"
                    numberDecimals={2}
                    onChange={[Function]}
                    overrides={{}}
                    type="text"
                    value=""
                  >
                    <ForwardRef
                      className="HoiPoi__Input__root-4-36"
                      error={false}
                      labelMode="vertical"
                      overrides={{}}
                    >
                      <div
                        className="HoiPoi__InputWrapper__root-4-5 HoiPoi__InputWrapper__vertical-4-9 HoiPoi__Input__root-4-36"
                      >
                        <div
                          className="HoiPoi__InputWrapper__inputWrapper-4-6"
                        >
                          <div
                            className="HoiPoi__InputWrapper__formControl-4-11"
                          >
                            <div
                              className="HoiPoi__Input__inputComponents-4-38"
                            >
                              <input
                                className="HoiPoi__Input__input-4-39"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                onKeyDown={[Function]}
                                onKeyUp={[Function]}
                                readOnly={false}
                                type="text"
                                value=""
                              />
                            </div>
                          </div>
                        </div>
                        <Component
                          className=""
                          error={false}
                          overrides={{}}
                        />
                      </div>
                    </ForwardRef>
                  </ForwardRef>
                </div>
              </div>
            </div>
            <Component
              className=""
              overrides={{}}
            />
          </div>
        </ForwardRef>
      </Component>
    </JssProvider>
  </ThemeProvider>
</Component>
`;
