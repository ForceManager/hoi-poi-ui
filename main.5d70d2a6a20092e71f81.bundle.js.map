{"version":3,"file":"main.5d70d2a6a20092e71f81.bundle.js","sources":["webpack:///./src/components/Button/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from 'react-jss';\nimport classnames from 'classnames';\nimport styles from './styles';\n\nfunction Button(\n    { children, classes, onClick, size, type, color, isDisabled, isFullWidth, href },\n    ...props\n) {\n    const rootClassName = classnames(classes.root, {\n        [classes.default]: !color,\n        [classes.outlined]: type === 'outlined',\n        [classes.primary]: color === 'primary',\n        [classes.danger]: color === 'danger',\n        [classes.small]: size === 'small',\n        [classes.big]: size === 'big',\n        [classes.disabled]: isDisabled,\n        [classes.fullWidth]: isFullWidth,\n    });\n\n    const content = <span className={classes.label}>{children}</span>;\n    const rootProps = {\n        className: rootClassName,\n        onClick: isDisabled ? onClick : null,\n    };\n\n    if (href) {\n        return (\n            <a href={href} {...rootProps} {...props}>\n                {content}\n            </a>\n        );\n    } else {\n        return (\n            <button href={href} {...rootProps} {...props}>\n                {content}\n            </button>\n        );\n    }\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    children: PropTypes.node.isRequired,\n    size: PropTypes.string,\n    type: PropTypes.string,\n    color: PropTypes.string,\n    isDisabled: PropTypes.bool,\n    isFullWidth: PropTypes.bool,\n    href: PropTypes.string,\n};\n\nexport default React.memo(withStyles(styles)(Button));\n"],"mappings":"AAMA","sourceRoot":""}